let slideIndex = 0; // Come칞a na primeira imagem
showSlides(); // Chama a fun칞칚o para iniciar o slideshow

function showSlides() {
  let i;
  let slides = document.getElementsByClassName("slide");
  let dots = document.getElementsByClassName("dot");

  // Esconde todas as imagens
  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }

  // Incrementa o 칤ndice da imagem
  slideIndex++;
  // Se o 칤ndice for maior que o n칰mero de slides, volta para o primeiro
  if (slideIndex > slides.length) {
    slideIndex = 1;
  }

  // Remove a classe 'active' de todos os pontos
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }

  // Mostra a imagem atual e adiciona 'active' ao ponto correspondente
  if (slides.length > 0) { // Garante que h치 slides para mostrar
      slides[slideIndex - 1].style.display = "block";
      dots[slideIndex - 1].className += " active";
  }

  // Chama a fun칞칚o novamente ap칩s 4 segundos (4000 milissegundos)
  setTimeout(showSlides, 4000); // Mude este valor para ajustar a velocidade
}

// Fun칞칫es para navega칞칚o manual (bot칫es e pontos)
function plusSlides(n) {
  clearTimeout(autoSlideTimeout); // Limpa o timeout autom치tico ao navegar manualmente
  showSlidesManual(slideIndex += n);
}

function currentSlide(n) {
  clearTimeout(autoSlideTimeout); // Limpa o timeout autom치tico ao navegar manualmente
  showSlidesManual(slideIndex = n);
}

let autoSlideTimeout; // Vari치vel para armazenar o timeout do slideshow autom치tico

function showSlidesManual(n) {
  let i;
  let slides = document.getElementsByClassName("slide");
  let dots = document.getElementsByClassName("dot");

  if (n > slides.length) { slideIndex = 1 }
  if (n < 1) { slideIndex = slides.length }

  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }

  if (slides.length > 0) {
      slides[slideIndex - 1].style.display = "block";
      dots[slideIndex - 1].className += " active";
  }
  
  // Reinicia o slideshow autom치tico ap칩s uma navega칞칚o manual
  autoSlideTimeout = setTimeout(showSlides, 4000); 
}

// Inicia o slideshow autom치tico na primeira carga da p치gina
autoSlideTimeout = setTimeout(showSlides, 4000);



// Adicione este c칩digo ao final do seu js/script.js

document.addEventListener('DOMContentLoaded', (event) => {
    const music = document.getElementById('background-music');
    const audioControlButton = document.getElementById('audio-control-button');

    // Tenta tocar a m칰sica (mutada) assim que a p치gina carrega
    // Isso 칠 uma boa pr치tica para contornar pol칤ticas de autoplay de navegadores
    if (music) {
        music.play().catch(error => {
            console.log("Autoplay de 치udio mutado falhou ou n칚o 칠 permitido.", error);
            // Se o autoplay falhar mesmo mutado (raro, mas pode acontecer em certas condi칞칫es),
            // o usu치rio ainda poder치 ativar pelo bot칚o.
        });
    }

    if (audioControlButton && music) {
        // Define o 칤cone inicial do bot칚o com base no estado do 치udio
        audioControlButton.textContent = music.muted ? '游댆' : '游댉';

        audioControlButton.addEventListener('click', () => {
            if (music.muted) {
                music.muted = false;
                audioControlButton.textContent = '游댉'; // 칈cone de som ligado
            } else {
                music.muted = true;
                audioControlButton.textContent = '游댆'; // 칈cone de som mutado
            }
        });
    }
});

 